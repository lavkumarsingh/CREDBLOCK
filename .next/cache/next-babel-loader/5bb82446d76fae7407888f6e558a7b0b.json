{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lav Singh\\\\Desktop\\\\CREDSOL\\\\pages\\\\verify.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// CLIENT SIDE\nimport React, { Component } from 'react';\nimport instance from '../ethereum/instance';\nimport web3 from '../ethereum/web3';\nimport md5 from 'md5';\n\nvar Verify = /*#__PURE__*/function (_Component) {\n  _inherits(Verify, _Component);\n\n  var _super = _createSuper(Verify);\n\n  function Verify() {\n    var _this;\n\n    _classCallCheck(this, Verify);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      account: 'Metamask not connected!',\n      org: '',\n      name: '',\n      course: '',\n      hash: '',\n      hashId: '',\n      fetch: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFetch\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var getbykey;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.prev = 1;\n                _context.next = 4;\n                return instance.methods.getValue(_this.state.hash).call().then(function (result) {\n                  console.log(result[0], result[1], result[2], result[3]);\n\n                  _this.setState({\n                    hashId: result[0]\n                  });\n\n                  _this.setState({\n                    hashId: result[1]\n                  });\n\n                  _this.setState({\n                    hashId: result[2]\n                  });\n\n                  _this.setState({\n                    hashId: result[3]\n                  });\n                });\n\n              case 4:\n                getbykey = _context.sent;\n                console.log(getbykey);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Verify, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, __jsx(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, this.state.account), __jsx(\"form\", {\n        onSubmit: this.onFetch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, \"Enter the hash\"), __jsx(\"input\", {\n        value: this.state.hash,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            hash: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      })), __jsx(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, \"Get\"), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, this.state.fetch)));\n    }\n  }]);\n\n  return Verify;\n}(Component);\n\nexport default Verify;","map":{"version":3,"sources":["C:/Users/Lav Singh/Desktop/CREDSOL/pages/verify.js"],"names":["React","Component","instance","web3","md5","Verify","account","org","name","course","hash","hashId","fetch","e","preventDefault","methods","getValue","state","call","then","result","console","log","setState","getbykey","onFetch","event","target","value"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;IAEMC,M;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,OAAO,EAAE,yBADH;AAENC,MAAAA,GAAG,EAAE,EAFC;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,MAAM,EAAE,EAJF;AAKNC,MAAAA,IAAI,EAAE,EALA;AAMNC,MAAAA,MAAM,EAAE,EANF;AAONC,MAAAA,KAAK,EAAE;AAPD,K;;;0EAUE,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRA,gBAAAA,CAAC,CAACC,cAAF;AADQ;AAAA;AAAA,uBAIiBZ,QAAQ,CAACa,OAAT,CAAiBC,QAAjB,CAA0B,MAAKC,KAAL,CAAWP,IAArC,EACpBQ,IADoB,GACbC,IADa,CACR,UAAAC,MAAM,EAAI;AACrBC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAAC,CAAD,CAAlB,EAAuBA,MAAM,CAAC,CAAD,CAA7B,EAAkCA,MAAM,CAAC,CAAD,CAAxC,EAA6CA,MAAM,CAAC,CAAD,CAAnD;;AACA,wBAAKG,QAAL,CAAc;AAACZ,oBAAAA,MAAM,EAAES,MAAM,CAAC,CAAD;AAAf,mBAAd;;AACA,wBAAKG,QAAL,CAAc;AAACZ,oBAAAA,MAAM,EAAES,MAAM,CAAC,CAAD;AAAf,mBAAd;;AACA,wBAAKG,QAAL,CAAc;AAACZ,oBAAAA,MAAM,EAAES,MAAM,CAAC,CAAD;AAAf,mBAAd;;AACA,wBAAKG,QAAL,CAAc;AAACZ,oBAAAA,MAAM,EAAES,MAAM,CAAC,CAAD;AAAf,mBAAd;AACD,iBAPoB,CAJjB;;AAAA;AAIAI,gBAAAA,QAJA;AAYJH,gBAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AAZI;AAAA;;AAAA;AAAA;AAAA;AAcNH,gBAAAA,OAAO,CAACC,GAAR;;AAdM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAkBD;AAAA;;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKL,KAAL,CAAWX,OAAhB,CADF,EAEE;AAAM,QAAA,QAAQ,EAAE,KAAKmB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AACE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWP,IADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAgB,KAAK;AAAA,iBAAI,MAAI,CAACH,QAAL,CAAc;AAAEb,YAAAA,IAAI,EAAEgB,KAAK,CAACC,MAAN,CAAaC;AAArB,WAAd,CAAJ;AAAA,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKX,KAAL,CAAWL,KAAhB,CAXF,CAFF,CADF;AAkBD;;;;EAjDkBX,S;;AAoDrB,eAAeI,MAAf","sourcesContent":["// CLIENT SIDE\r\nimport React, { Component } from 'react';\r\nimport instance from '../ethereum/instance';\r\nimport web3 from '../ethereum/web3';\r\nimport md5 from 'md5';\r\n\r\nclass Verify extends Component {\r\n  state = {\r\n    account: 'Metamask not connected!',\r\n    org: '',\r\n    name: '',\r\n    course: '',\r\n    hash: '',\r\n    hashId: '',\r\n    fetch: ''\r\n  }\r\n\r\n  onFetch = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const getbykey = await instance.methods.getValue(this.state.hash)\r\n        .call().then(result => {\r\n          console.log(result[0], result[1], result[2], result[3]);\r\n          this.setState({hashId: result[0]});\r\n          this.setState({hashId: result[1]});\r\n          this.setState({hashId: result[2]});\r\n          this.setState({hashId: result[3]});\r\n        });\r\n        console.log(getbykey);\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return(\r\n      <div>\r\n        <h4>{this.state.account}</h4>\r\n        <form onSubmit={this.onFetch}>\r\n\r\n          <div>\r\n            <label>Enter the hash</label>\r\n            <input\r\n              value={this.state.hash}\r\n              onChange={event => this.setState({ hash: event.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <button>Get</button>\r\n          <h2>{this.state.fetch}</h2>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Verify;\r\n"]},"metadata":{},"sourceType":"module"}