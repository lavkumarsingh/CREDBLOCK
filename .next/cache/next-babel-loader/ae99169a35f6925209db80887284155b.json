{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lav Singh\\\\Desktop\\\\CREDSOL\\\\pages\\\\verify.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// CLIENT SIDE\nimport React, { Component } from 'react';\nimport instance from '../ethereum/instance';\nimport web3 from '../ethereum/web3';\nimport md5 from 'md5';\n\nclass Verify extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: 'Metamask not connected!',\n      org: '',\n      name: '',\n      course: '',\n      hash: '',\n      hashId: '',\n      fetch: ''\n    });\n\n    _defineProperty(this, \"onFetch\", async e => {\n      e.preventDefault();\n\n      try {\n        const getbykey = await instance.methods.getValue(this.state.hash).call().then(result => {\n          console.log(result[0], result[1], result[2], result[3]);\n          this.setState({\n            org: result[0]\n          });\n          this.setState({\n            name: result[1]\n          });\n          this.setState({\n            course: result[2]\n          });\n          this.setState({\n            hashId: result[3]\n          });\n        });\n        console.log(getbykey);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, this.state.account), __jsx(\"form\", {\n      onSubmit: this.onFetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Enter the hash\"), __jsx(\"input\", {\n      value: this.state.hash,\n      onChange: event => this.setState({\n        hash: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    })), __jsx(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Get\"), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, this.state.fetch)), __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, this.state.org), __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, this.state.name), __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, this.state.course), __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, this.state.hashId));\n  }\n\n}\n\nexport default Verify;","map":{"version":3,"sources":["C:/Users/Lav Singh/Desktop/CREDSOL/pages/verify.js"],"names":["React","Component","instance","web3","md5","Verify","account","org","name","course","hash","hashId","fetch","e","preventDefault","getbykey","methods","getValue","state","call","then","result","console","log","setState","err","render","onFetch","event","target","value"],"mappings":"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","sourcesContent":["// CLIENT SIDE\r\nimport React, { Component } from 'react';\r\nimport instance from '../ethereum/instance';\r\nimport web3 from '../ethereum/web3';\r\nimport md5 from 'md5';\r\n\r\nclass Verify extends Component {\r\n  state = {\r\n    account: 'Metamask not connected!',\r\n    org: '',\r\n    name: '',\r\n    course: '',\r\n    hash: '',\r\n    hashId: '',\r\n    fetch: ''\r\n  }\r\n\r\n  onFetch = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const getbykey = await instance.methods.getValue(this.state.hash)\r\n        .call().then(result => {\r\n          console.log(result[0], result[1], result[2], result[3]);\r\n          this.setState({org: result[0]});\r\n          this.setState({name: result[1]});\r\n          this.setState({course: result[2]});\r\n          this.setState({hashId: result[3]});\r\n        });\r\n        console.log(getbykey);\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return(\r\n      <div>\r\n        <h4>{this.state.account}</h4>\r\n        <form onSubmit={this.onFetch}>\r\n\r\n          <div>\r\n            <label>Enter the hash</label>\r\n            <input\r\n              value={this.state.hash}\r\n              onChange={event => this.setState({ hash: event.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <button>Get</button>\r\n          <h2>{this.state.fetch}</h2>\r\n        </form>\r\n        <h4>{this.state.org}</h4>\r\n        <h4>{this.state.name}</h4>\r\n        <h4>{this.state.course}</h4>\r\n        <h4>{this.state.hashId}</h4>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Verify;\r\n"]},"metadata":{},"sourceType":"module"}