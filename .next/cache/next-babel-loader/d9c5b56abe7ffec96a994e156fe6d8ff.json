{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lav Singh\\\\Desktop\\\\CRED\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// CLIENT SIDE\nimport React, { Component } from 'react';\nimport instance from '../ethereum/instance';\nimport web3 from '../ethereum/web3';\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      org: '',\n      name: '',\n      course: '',\n      hash: '',\n      fetch: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", async e => {\n      e.preventDefault();\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await instance.methods.generateCertificate(this.state.org, this.state.name, this.state.course, this.state.hash).send({\n          gas: '1000000',\n          from: accounts[0]\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    });\n\n    _defineProperty(this, \"onFetch\", async e => {\n      e.preventDefault();\n\n      try {\n        const getbykey = await instance.methods.getValue(this.state.hash).call().then(result => {\n          console.log(result[0]);\n        });\n        console.log(getbykey);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }\n\n  render() {\n    web3.eth.getAccounts().then(account => {\n      console.log(account);\n    });\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, __jsx(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Enter the org\"), __jsx(\"input\", {\n      value: this.state.org,\n      onChange: event => this.setState({\n        org: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Enter the name\"), __jsx(\"input\", {\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Enter the course\"), __jsx(\"input\", {\n      value: this.state.course,\n      onChange: event => this.setState({\n        course: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Enter the hash\"), __jsx(\"input\", {\n      value: this.state.hash,\n      onChange: event => this.setState({\n        hash: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    })), __jsx(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Set\")), __jsx(\"form\", {\n      onSubmit: this.onFetch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Enter the hash\"), __jsx(\"input\", {\n      value: this.state.hash,\n      onChange: event => this.setState({\n        hash: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    })), __jsx(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Get\"), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, this.state.fetch)));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Lav Singh/Desktop/CRED/pages/index.js"],"names":["React","Component","instance","web3","Index","org","name","course","hash","fetch","e","preventDefault","accounts","eth","getAccounts","methods","generateCertificate","state","send","gas","from","err","console","log","getbykey","getValue","call","then","result","render","account","onSubmit","event","setState","target","value","onFetch"],"mappings":"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","sourcesContent":["// CLIENT SIDE\r\nimport React, { Component } from 'react';\r\nimport instance from '../ethereum/instance';\r\nimport web3 from '../ethereum/web3';\r\n\r\nclass Index extends Component {\r\n  state = {\r\n    org: '',\r\n    name: '',\r\n    course: '',\r\n    hash: '',\r\n    fetch: ''\r\n  }\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await instance\r\n        .methods.generateCertificate(this.state.org, this.state.name, this.state.course, this.state.hash)\r\n        .send({ gas: '1000000', from: accounts[0]});\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  onFetch = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const getbykey = await instance.methods.getValue(this.state.hash)\r\n        .call().then(result => {\r\n          console.log(result[0]);\r\n        });\r\n        console.log(getbykey);\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  render() {\r\n      web3.eth.getAccounts().then( account => {\r\n        console.log(account);\r\n      });\r\n    return(\r\n      <div>\r\n        <form onSubmit={this.onSubmit}>\r\n\r\n          <div>\r\n            <label>Enter the org</label>\r\n            <input\r\n              value={this.state.org}\r\n              onChange={event => this.setState({ org: event.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Enter the name</label>\r\n            <input\r\n              value={this.state.name}\r\n              onChange={event => this.setState({ name: event.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Enter the course</label>\r\n            <input\r\n              value={this.state.course}\r\n              onChange={event => this.setState({ course: event.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Enter the hash</label>\r\n            <input\r\n              value={this.state.hash}\r\n              onChange={event => this.setState({ hash: event.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <button>Set</button>\r\n        </form>\r\n\r\n        <form onSubmit={this.onFetch}>\r\n\r\n          <div>\r\n            <label>Enter the hash</label>\r\n            <input\r\n              value={this.state.hash}\r\n              onChange={event => this.setState({ hash: event.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <button>Get</button>\r\n          <h2>{this.state.fetch}</h2>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}