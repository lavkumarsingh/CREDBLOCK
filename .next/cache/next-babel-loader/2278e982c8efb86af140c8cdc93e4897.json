{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lav Singh\\\\Desktop\\\\CREDSOL\\\\pages\\\\create.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// CLIENT SIDE\nimport React, { Component } from 'react';\nimport instance from '../ethereum/instance';\nimport web3 from '../ethereum/web3';\nimport md5 from 'md5';\n\nclass Create extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: '',\n      org: '',\n      name: '',\n      course: '',\n      hash: '',\n      fetch: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", async e => {\n      e.preventDefault();\n      const hash = md5(this.state.course + this.state.name + this.state.organisation);\n      this.setState({\n        hash\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await instance.methods.generateCertificate(this.state.org, this.state.name, this.state.course, hash).send({\n          gas: '1000000',\n          from: accounts[0]\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }\n\n  render() {\n    web3.eth.getAccounts().then(account => {\n      if (account[0] !== '') {\n        this.setState({\n          account: account[0]\n        });\n      } else {\n        this.setState({\n          account: 'Login to your Metamask'\n        });\n      }\n    });\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, this.state.account), __jsx(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"Enter the org\"), __jsx(\"input\", {\n      value: this.state.org,\n      onChange: event => this.setState({\n        org: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Enter the name\"), __jsx(\"input\", {\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Enter the course\"), __jsx(\"input\", {\n      value: this.state.course,\n      onChange: event => this.setState({\n        course: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    })), __jsx(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Set\"), __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, this.state.hash)));\n  }\n\n}\n\nexport default Create;","map":{"version":3,"sources":["C:/Users/Lav Singh/Desktop/CREDSOL/pages/create.js"],"names":["React","Component","instance","web3","md5","Create","account","org","name","course","hash","fetch","e","preventDefault","state","organisation","setState","accounts","eth","getAccounts","methods","generateCertificate","send","gas","from","err","console","log","render","then","onSubmit","event","target","value"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,GAAP,MAAgB,KAAhB;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCACrB;AACNK,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,GAAG,EAAE,EAFC;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,MAAM,EAAE,EAJF;AAKNC,MAAAA,IAAI,EAAE,EALA;AAMNC,MAAAA,KAAK,EAAE;AAND,KADqB;;AAAA,sCAUlB,MAAOC,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMH,IAAI,GAAGN,GAAG,CAAC,KAAKU,KAAL,CAAWL,MAAX,GAAoB,KAAKK,KAAL,CAAWN,IAA/B,GAAsC,KAAKM,KAAL,CAAWC,YAAlD,CAAhB;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;;AACA,UAAI;AACF,cAAMO,QAAQ,GAAG,MAAMd,IAAI,CAACe,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMjB,QAAQ,CACXkB,OADG,CACKC,mBADL,CACyB,KAAKP,KAAL,CAAWP,GADpC,EACyC,KAAKO,KAAL,CAAWN,IADpD,EAC0D,KAAKM,KAAL,CAAWL,MADrE,EAC6EC,IAD7E,EAEHY,IAFG,CAEE;AAAEC,UAAAA,GAAG,EAAE,SAAP;AAAkBC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhC,SAFF,CAAN;AAGD,OALD,CAKE,OAAMQ,GAAN,EAAW;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,KAtB4B;AAAA;;AAwB7BG,EAAAA,MAAM,GAAG;AACLzB,IAAAA,IAAI,CAACe,GAAL,CAASC,WAAT,GAAuBU,IAAvB,CAA6BvB,OAAO,IAAI;AACtC,UAAGA,OAAO,CAAC,CAAD,CAAP,KAAe,EAAlB,EAAqB;AACrB,aAAKU,QAAL,CAAc;AAAEV,UAAAA,OAAO,EAAEA,OAAO,CAAC,CAAD;AAAlB,SAAd;AACD,OAFC,MAEK;AACL,aAAKU,QAAL,CAAc;AAAEV,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD;AACA,KAND;AAOF,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKQ,KAAL,CAAWR,OAAhB,CADF,EAEE;AAAM,MAAA,QAAQ,EAAE,KAAKwB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AACE,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWP,GADpB;AAEE,MAAA,QAAQ,EAAEwB,KAAK,IAAI,KAAKf,QAAL,CAAc;AAAET,QAAAA,GAAG,EAAEwB,KAAK,CAACC,MAAN,CAAaC;AAApB,OAAd,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AACE,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWN,IADpB;AAEE,MAAA,QAAQ,EAAEuB,KAAK,IAAI,KAAKf,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAEuB,KAAK,CAACC,MAAN,CAAaC;AAArB,OAAd,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AACE,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWL,MADpB;AAEE,MAAA,QAAQ,EAAEsB,KAAK,IAAI,KAAKf,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAEsB,KAAK,CAACC,MAAN,CAAaC;AAAvB,OAAd,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAlBF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA1BF,EA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKnB,KAAL,CAAWJ,IAAjB,CA3BF,CAFF,CADF;AAmCD;;AAnE4B;;AAsE/B,eAAeL,MAAf","sourcesContent":["// CLIENT SIDE\r\nimport React, { Component } from 'react';\r\nimport instance from '../ethereum/instance';\r\nimport web3 from '../ethereum/web3';\r\nimport md5 from 'md5';\r\n\r\nclass Create extends Component {\r\n  state = {\r\n    account: '',\r\n    org: '',\r\n    name: '',\r\n    course: '',\r\n    hash: '',\r\n    fetch: ''\r\n  }\r\n\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const hash = md5(this.state.course + this.state.name + this.state.organisation);\r\n    this.setState({ hash })\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await instance\r\n        .methods.generateCertificate(this.state.org, this.state.name, this.state.course, hash)\r\n        .send({ gas: '1000000', from: accounts[0]});\r\n    } catch(err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  render() {\r\n      web3.eth.getAccounts().then( account => {\r\n        if(account[0] !== ''){\r\n        this.setState({ account: account[0] });\r\n      } else {\r\n        this.setState({ account: 'Login to your Metamask' })\r\n      }\r\n      });\r\n    return(\r\n      <div>\r\n        <h4>{this.state.account}</h4>\r\n        <form onSubmit={this.onSubmit}>\r\n\r\n          <div>\r\n            <label>Enter the org</label>\r\n            <input\r\n              value={this.state.org}\r\n              onChange={event => this.setState({ org: event.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Enter the name</label>\r\n            <input\r\n              value={this.state.name}\r\n              onChange={event => this.setState({ name: event.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Enter the course</label>\r\n            <input\r\n              value={this.state.course}\r\n              onChange={event => this.setState({ course: event.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <button>Set</button>\r\n          <h4>{ this.state.hash }</h4>\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Create;\r\n"]},"metadata":{},"sourceType":"module"}